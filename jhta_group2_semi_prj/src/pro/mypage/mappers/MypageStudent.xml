<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE sqlMap      
    PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN"      
    "http://ibatis.apache.org/dtd/sql-map-2.dtd">

<sqlMap namespace="MyPageStudent">

	<typeAlias alias="Student" type="pro.student.vo.Student"/>
	<typeAlias alias="Enrollment" type="pro.enrollment.vo.Enrollment"/>
	<typeAlias alias="Qna" type="pro.qna.vo.Qna"/>
	<typeAlias alias="Tech" type="pro.tech.vo.Tech"/>
	<typeAlias alias="Criteria" type="pro.criteria.vo.Criteria"/>

	<select id="getStudentInfo" parameterClass="Criteria" resultClass="Student">
		select 
			A.student_no 		no
			,A.student_name 	name
			,A.student_email 	email
		    ,A.student_pwd 		pwd
		    ,A.student_phone 	phone
		    ,A.student_point 	point
		    ,A.user_type 		type
		from (select row_number() over(order by student_no desc) rn, student_no, student_name, student_email, student_pwd, student_phone, student_point, user_type
			from student
			where user_type = 'S'
			<dynamic>
				<isNotNull property="opt">
					<isNotNull property="keyword">
						<isEqual property="opt" compareValue="id">
							and student_email like '%' || #keyword# || '%'
						</isEqual>
						<isEqual property="opt" compareValue="name">
							and student_name like '%' || #keyword# || '%'
						</isEqual>
					</isNotNull>
				</isNotNull>
			</dynamic>
			) A
		<![CDATA[
			where A.rn >= 1
			and A.rn <= 5	
		]]>
	</select>
	
	<select id="getTotalStudents" parameterClass="Criteria" resultClass="int">
		select count(*)
		from student
		where user_type = 'S'
		<dynamic>
			<isNotNull property="opt">
				<isNotNull property="keyword">
					<isEqual property="opt" compareValue="id">
						and student_email like '%' || #keyword# || '%'
					</isEqual>
					<isEqual property="opt" compareValue="name">
						and student_name like '%' || #keyword# || '%'
					</isEqual>
				</isNotNull>
			</isNotNull>
		</dynamic>
	</select>
	
	<select id="getStudentByNo" parameterClass="int" resultClass="Student">
		select
			student_no			no
			,student_name		name
			,student_email		email
			,student_pwd		pwd
			,student_phone		phone
			,student_point		point
			,user_type			type
		from student
		where student_no = #value#
	</select>
	
	<select id="getStudentByEmail" parameterClass="string" resultClass="Student">
		select
			student_no			no
			,student_name		name
			,student_email		email
			,student_pwd		pwd
			,student_phone		phone
			,student_point		point
			,user_type			type
		from student
		where student_email = #value#
	</select>
	
	<select id="getEnrollmentByStudentNo" parameterClass="int" resultClass="Enrollment">
		select
			A.enrollment_no					no
			,A.enrollment_start_date		startDate
			,A.course_no					"course.no"
			,B.course_name					"course.name"
			,B.lecturer_no					"course.lecturer.no"
			,C.lecturer_name				"course.lecturer.name"
		from enrollment A, course B, lecturer C
		where A.course_no = B.course_no
		and B.lecturer_no = C.lecturer_no
		and A.student_no = #value#
	</select>
	
	<select id="getTotalQnaRows" parameterClass="int" resultClass="int">
		select count(*)
		from qna
		where student_no = #value#
		and  qna_active = 'Y'
	</select>
	
	<select id="getQnaByStudentNo" parameterClass="Criteria" resultClass="Qna">
		select 
			A.qna_no 				no
			,A.qna_title			title
			,A.course_no			"course.no"
			,B.course_name			"course.name"
			,A.qna_ques_content 	quesContent
			,A.qna_ques_date		quesDate
			,A.qna_ans_content		ansContent
			,A.qna_ans_regdate		ansRegdate
			,C.lecturer_no			"course.lecture.no"
			,C.lecturer_name		"course.lecture.name"
		from (select row_number() over(order by qna_no desc) rn, qna_no, qna_title, course_no, 
					qna_ques_content, qna_ques_date, qna_ans_content, qna_ans_regdate, student_no, qna_active 
			from qna
			where qna_active = 'Y'
			and student_no = #studentNo#) A, course B, lecturer C
		where A.course_no = B.course_no
		and B.lecturer_no = C.lecturer_no
		<dynamic>
			<isNotNull property="opt">
				<isNotNull property ="keyword">
					<isEqual property="opt" compareValue="title">
						and A.qna_title like '%' || #keyword# || '%'
					</isEqual>
					<isEqual property="opt" compareValue="course">
						and B.course_name like '%' || #keyword# || '%'					
					</isEqual>
					<isEqual property="opt" compareValue="lecturer">
						and C.lecturer_name like '%' || #keyword# || '%'
					</isEqual>
				</isNotNull>
			</isNotNull>
			<isNotNull property="noAnswer">
				<isEqual property="noAnswer" compareValue="N">
						and A.qna_ans_content is not null
				</isEqual>
				<isEqual property="noAnswer" compareValue="Y">
						and A.qna_ans_content is null
				</isEqual>
			</isNotNull>
		</dynamic>
		<![CDATA[
			and rn >= #beginIndex#
			and rn <= #endIndex#
		]]>
	</select>
	
	<select id="getTotalTechRows" parameterClass="Criteria" resultClass="int">
		select count(*)
		from tech
		where tech_active = 'Y'
		<dynamic>
			<isNotNull property="studentNo">
				and student_no = #studentNo#
			</isNotNull>
			<isNotNull property="noAnswer">
				<isEqual property="noAnswer" compareValue="Y">
					and tech_ans_content is null
				</isEqual>
				<isEqual property="noAnswer" compareValue="N">
					and tech_ans_content is not null
				</isEqual>
			</isNotNull>
		</dynamic>
	</select>
	
	<select id="getTechInfo" parameterClass="Criteria" resultClass="Tech">
		select
			 A.tech_no					no
			 ,A.tech_title				title
			 ,A.tech_ques_content		quesContent
			 ,A.tech_ques_regdate		quesRegdate
			 ,A.tech_ans_content		ansContent
			 ,A.tech_ans_regdate		ansRegdate
			 ,A.tech_active				active
			 ,A.student_no				"student.no"
			 ,A.student_name			"student.name"
		from (select row_number() over(order by tech_no desc) rn, T.tech_no, T.tech_title, T.tech_ques_content, T.tech_ques_regdate, T.tech_ans_content, T.tech_ans_regdate, T.tech_active, T.student_no, S.student_name
			from tech T, student S
			where T.student_no = S.student_no
			and tech_active = 'Y'
			<dynamic>
				<isNotEqual property="studentNo" compareValue="0">
					and T.student_no = #studentNo#
				</isNotEqual>
				<isNotNull property="opt">
					<isNotNull property="keyword">
						<isEqual property="opt" compareValue="title">
							and T.tech_title like '%' || #keyword# || '%'
						</isEqual>
						<isEqual property="opt" compareValue="student">
							and S.student_name like '%' || #keyword# || '%'
						</isEqual>
					</isNotNull>
				</isNotNull>
				<isNotNull property="noAnswer">
					<isEqual property="noAnswer" compareValue="Y">
						and T.tech_ans_content is null
					</isEqual>
					<isEqual property="noAnswer" compareValue="N">
						and T.tech_ans_content is not null
					</isEqual>
				</isNotNull>
			</dynamic>
			) A
		<![CDATA[
			where A.rn >= #beginIndex#
			and A.rn <= #endIndex#
		]]>
	</select>
	
	<update id="updateMyInfo" parameterClass="Student">
		update student
		set
			student_pwd = #pwd#
			,student_phone = #phone#
		where student_no = #no#
	</update>
</sqlMap>